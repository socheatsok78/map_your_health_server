version: "3"
services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: "digitalocean.com/php"
    restart: unless-stopped
    tty: true
    depends_on:
      - server
      - redis
      - mysql
    environment:
      SERVICE_NAME: app
      SERVICE_TAG: dev
      # Application
      APP_NAME: Laravel
      APP_ENV: local
      APP_KEY: "base64:EbCUbb8DKElCF1f1tF+PTrYdheNOpF0MVO+r0pXV+eY="
      APP_DEBUG: "true"
      APP_URL: http://localhost
      # Logging
      LOG_CHANNEL: stack
      # Database
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: your_mysql_root_password
      # Broadcast & Cache
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_DRIVER: redis
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: redis
      SESSION_LIFETIME: 120
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./.data/logs:/var/www/storage/logs
      - ./.services/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - backend
      - elastic

  # Nginx Service
  server:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www
      - ./.services/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - backend

  #MySQL Service
  mysql:
    image: mysql:5.7.22
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: your_mysql_root_password
    volumes:
      - ./.data/mysql:/var/lib/mysql
      - ./.services/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - backend

  # Redis Service
  redis:
    image: redis:4-alpine
    restart: unless-stopped
    ports:
      - 16379:6379
    environment:
      SERVICE_TAGS: dev
      SERVICE_NAME: redis
    volumes:
      - ./.data/redis:/data
    networks:
      - backend

  scheduler:
    image: "digitalocean.com/php"
    depends_on:
      - app
    volumes:
      - .:/var/www/
    environment:
      SERVICE_NAME: scheduler
      SERVICE_TAG: dev
      # Application
      APP_NAME: Laravel
      APP_ENV: local
      APP_KEY: "base64:EbCUbb8DKElCF1f1tF+PTrYdheNOpF0MVO+r0pXV+eY="
      APP_DEBUG: "true"
      APP_URL: http://localhost
      # Database
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: your_mysql_root_password
      # Broadcast & Cache
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
    networks:
      - backend

  queue:
    image: "digitalocean.com/php"
    depends_on:
      - app
    volumes:
      - .:/var/www/
    environment:
      SERVICE_NAME: queue
      SERVICE_TAG: dev
      # Application
      APP_NAME: Laravel
      APP_ENV: local
      APP_KEY: "base64:EbCUbb8DKElCF1f1tF+PTrYdheNOpF0MVO+r0pXV+eY="
      APP_DEBUG: "true"
      APP_URL: http://localhost
      # Database
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: laravel
      DB_USERNAME: root
      DB_PASSWORD: your_mysql_root_password
      # Broadcast & Cache
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
    networks:
      - backend

  elasticsearch:
    image: elasticsearch:7.3.2
    environment:
      - node.name=elasticsearch1
      - cluster.name=docker-cluster
      - cluster.initial_master_nodes=elasticsearch1
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - network.host=_eth0_
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./.data/elasticsearch/:/usr/share/elasticsearch/data/
    networks:
      - elastic

  kibana:
    image: kibana:7.3.2
    depends_on:
      - elasticsearch
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch1:9200
    networks:
      - elastic

#Docker Networks
networks:
  backend:
    driver: bridge
  elastic:

#Volumes
volumes:
  redis:
    driver: "local"
  mysql:
    driver: local
